import boto3

from src.telegram.v1 import Event, response, HTTP200
from src.telegram.v1.botchat import Listener

endpoint_url = 'https://storage.yandexcloud.net'
prefix = 'photo/'
bucket = 'booking'

s3_resource = boto3.resource("s3", endpoint_url=endpoint_url)
s3_bucket = s3_resource.Bucket(bucket)


texts = [  # TODO make possibility to change description
    """
    –ê—Ç–º–æ—Å—Ñ–µ—Ä–Ω–æ–µ –º–µ—Å—Ç–æ –î–û–ú –∏ –ë–ê–ù–Ø!
    –î–æ–º —Å–¥–∞—ë—Ç—Å—è –º–∏–Ω–∏–º—É–º –Ω–∞ –¥–≤–æ–µ —Å—É—Ç–æ–∫!!
    –¶–µ–Ω–∞ —É–∫–∞–∑–∞–Ω–∞ –ø—Ä–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ –æ—Ç 7 –¥–Ω–µ–π.
    –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –∫ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—é –∏—é–ª—å –∏ –∞–≤–≥—É—Å—Ç! 
    –°–≤–æ–±–æ–¥–Ω—ã–µ –¥–∞—Ç—ã —É—Ç–æ—á–Ω—è–π—Ç–µ!
    """,
    """
    –î–µ—Ä–µ–≤—è–Ω–Ω—ã–π,—É—é—Ç–Ω—ã–π,—Ç–µ–ø–ª—ã–π –¥–æ–º —Å –±–∞–Ω–µ–π.
    –í –¥–æ–º–µ –∏–º–µ–µ—Ç—Å—è –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–ª—è —Ö–æ—Ä–æ—à–µ–≥–æ –æ—Ç–¥—ã—Ö–∞,–≥–æ—Å—Ç–∏–Ω–Ω–∞—è,–∫—É—Ö–Ω—è,–¥–≤–µ —Å–ø–∞–ª—å–Ω–∏ –∏ –¥–≤–∞ —Å–∞–Ω—É–∑–ª–∞.
    –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ 6 —á–µ–ª–æ–≤–µ–∫.–î–æ–º —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω –≤ –∂–∏–ª–æ–º –ø–æ—Å–µ–ª–∫–µ,—Ä—è–¥–æ–º 
    –∞–≤—Ç–æ–±—É—Å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞,–¥–æ –º–æ—Ä—è 10 –º–∏–Ω —Ö–æ–¥—å–±—ã.
    –¢–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è —É—Ö–æ–∂–µ–Ω–Ω–∞—è,–Ω–∞ —É—á–∞—Å—Ç–∫–µ –µ—Å—Ç—å –ø—Ä—É–¥ —Å –¥–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–º–∏ —Ä—ã–±–∫–∞–º–∏,–≤ –ø—Ä—É–¥—É –∫—É–ø–∞—Ç—å—Å—è –º–æ–∂–Ω–æ!"""
    ,
    """–ü—Ä–∏ –∑–∞–µ–∑–¥–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è –∑–∞–ª–æ–≥–æ–≤–∞—è —Å—É–º–º–∞ 10000—Ä. –ù–∞ –≤c—è–∫–∏–π —Å–ª—É—á–∞–π""",
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è 10% –æ—Ç —Å—É–º–º—ã –±—Ä–æ–Ω–∏. –¶–µ–Ω–∞ –∑—É —Å—É—Ç–∫–∏ 7500—Ä """,
    """–í–Ω–∏–º–∞–Ω–∏–µ - –æ—Ç–º–µ–Ω–∞ –±—Ä–æ–Ω–∏ –¥–æ 50% –ø—Ä–∏ —É—Å–ª–æ–≤–∏–∏ –æ—Ç–º–µ–Ω—ã —Å–¥–µ–ª–∫–∏"""
]


@response(HTTP200)
def main_menu(body: dict, chat_id):
    return {
            'method': 'sendMessage',
            'chat_id': chat_id,
            'text': 'any text',
            'reply_markup': {'keyboard': [
                ['üè† –î–æ–º', '‚ò≠ –£—á–∞—Å—Ç–æ–∫', 'üìç –õ–æ–∫–∞—Ü–∏—è'],
                ['‚öì –ú–æ—Ä–µ', '–ù–∞–∑–∞–¥']
            ], 'resize_keyboard': True},
        }


def get_url_photos() -> list:
    expression = f"{endpoint_url}/{bucket}/{{key}}".format
    contents = s3_bucket.objects.filter(Prefix=prefix)
    return [expression(key=key.key) for key in contents if key.size]


def get_photos_in_media_format():
    mapping_attr: callable = lambda x: {'type': 'photo', 'media': x}
    return [mapping_attr(i) for i in get_url_photos()]


@response(HTTP200)
def photo(body: dict, chat_id):
    return {
        'method': 'sendMediaGroup',  # is can be sending as document ?  sendDocument
        # sendPhoto sendMediaGroup,
        'allow_sending_without_reply': False,
        'chat_id': chat_id,
        'media': get_photos_in_media_format(),
        'protect_content': True,
        'reply_markup': {'keyboard': [
            ['üè† –î–æ–º', '‚ò≠ –£—á–∞—Å—Ç–æ–∫'],
            ['‚öì –ú–æ—Ä–µ', '–ù–∞–∑–∞–¥']
        ], 'resize_keyboard': True},
    }


@response(HTTP200)
def location(body: dict, chat_id):
    return {
        'method': 'sendLocation',  # is can be sending as document ?  sendDocument
        # sendPhoto sendMediaGroup,
        'latitude': 54.9564385,
        'longitude': 20.260593,
        'chat_id': chat_id,
        'reply_markup': {'keyboard': [
            ['üè† –î–æ–º', '‚ò≠ –£—á–∞—Å—Ç–æ–∫'],
            ['‚öì –ú–æ—Ä–µ', '–ù–∞–∑–∞–¥']
        ], 'resize_keyboard': True},
    }


listener = Listener()
listener.add(main_menu, Event.Type.COMMAND, '/start')
listener.add(photo, Event.Type.TEXT, 'üè† –î–æ–º')
listener.add(location, Event.Type.TEXT, 'üìç –õ–æ–∫–∞—Ü–∏—è')
listener.add(main_menu, Event.Type.TEXT, '–ù–∞–∑–∞–¥')
